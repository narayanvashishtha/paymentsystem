spring.application.name=paymentsystem

spring.datasource.url=jdbc:postgresql://localhost:5432/paymentsystem
spring.datasource.username=payment_user
spring.datasource.password=narayan23

spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.docker.compose.enabled=false

# Redis Configuration
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.timeout=5000ms
spring.data.redis.database=0
spring.data.redis.jedis.pool.max-active=20
spring.data.redis.jedis.pool.max-idle=10
spring.data.redis.jedis.pool.min-idle=5
spring.data.redis.jedis.pool.max-wait=5000ms

# Worker Configuration
payment.worker.count=3
payment.worker.polling-interval-ms=1000
payment.worker.error-backoff-ms=2000
payment.worker.shutdown-timeout-seconds=30
payment.worker.enable-stats=true
payment.worker.stats-interval-seconds=30
payment.worker.max-jobs-per-worker=10000

# Alerting Configuration
payment.alerting.queue-warning-threshold=100
payment.alerting.queue-critical-threshold=1000
payment.alerting.dead-letter-warning-threshold=10
payment.alerting.dead-letter-critical-threshold=100
payment.alerting.worker-utilization-warning=0.8
payment.alerting.processing-time-warning-ms=10000
payment.alerting.processing-time-critical-ms=30000
payment.alerting.failure-rate-warning=0.1
payment.alerting.failure-rate-critical=0.2
payment.alerting.enabled=true
payment.alerting.alert-cooldown-minutes=5
payment.alerting.check-interval-seconds=30
payment.alerting.summary-interval-minutes=5
payment.alerting.alert-history-limit=100
payment.alerting.active-alert-ttl-seconds=3600

# Logging for alerts
logging.level.com.example.narayan.paymentsystem.service.monitoring.AlertingService=DEBUG
logging.level.ALERTS=INFO